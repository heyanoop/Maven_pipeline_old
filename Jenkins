pipeline {
    agent any

    tools {
        jdk 'jdk'
        maven 'maven'
    }

    environment {
        SCANNER_HOME = tool "sonar-scanner"
    }

    stages {
        stage('Git checkout') {
            steps {
                git changelog: false, poll: false, url: 'https://github.com/HouariZegai/Calculator.git'
            }
        }
         stage('clean') {
            steps {
                sh "mvn clean install -Dmaven.test.skip=true"
            }
        }
        
        
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
         
        stage('Sonar') {
            steps {
                withSonarQubeEnv("sonar-server") {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner \
                    -D sonar.projectName=cicd \
                    -D sonar.java.binaries=. \
                    -D sonar.projectKey=cicd '''
                }
            }
        }
           stage('Docker_build') {
            steps {
                sh "docker build -t heyanoop/calculator:${env.BUILD_TAG} ."
            }
        }
        stage('Docker_hub_login') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-token', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    }
            }
        }
    }
    stage('docker-hub-push') {
            steps {
                sh "docker push heyanoop/calculator:${env.BUILD_TAG}"
            }
        }
        

post {
        always {
            // Ensure Docker logout is performed
            script {
                sh "docker logout"
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
}
